let SessionLoad = 1
if &cp | set nocp | endif
let s:cpo_save=&cpo
set cpo&vim
inoremap <S-D-Down> <C-S-End>
inoremap <S-D-Up> <C-S-Home>
inoremap <M-S-Right> <C-S-Right>
inoremap <S-D-Right> <S-End>
inoremap <M-S-Left> <C-S-Left>
inoremap <S-D-Left> <S-Home>
imap <silent> <M-Down> <Plug>upAndDownInsertDown
imap <silent> <M-Up> <Plug>upAndDownInsertUp
inoremap <silent> <Plug>ragtagXmlV ="&#".getchar().";"
inoremap <silent> <Plug>NERDCommenterInInsert  <BS>:call NERDComment(0, "insert")
imap <D-[> 
imap <D-c> 
imap <D-o> 
imap <D-u> 
imap <D-p> 
imap <D-n> 
imap <D-x> 
imap <D-y> 
imap <D-e> 
cmap <D-d> 
imap <S-Space> <Plug>(neocomplcache_snippets_expand)
inoremap <expr> <S-Tab> pumvisible() ? "\" : "\	"
imap <silent> <F3> :call MRUToggle()
imap <silent> <F2> :NERDTreeToggle
imap <silent> <F7> :call QuickfixToggle()
imap <silent> <F6> :call ScrollBarToggle()
imap <silent> <F5> :call RelativeNumberToggle()
map! <D-v> *
vmap 	 >gv
nmap 	 v>
snoremap  a<BS>
snoremap  a<BS>
nnoremap <silent>   @=((foldclosed(line('.')) < 0) ? 'zc' : 'zo')
snoremap % a<BS>%
snoremap ' a<BS>'
nmap <silent> ,cv <Plug>VCSVimDiff
nmap <silent> ,cU <Plug>VCSUnlock
nmap <silent> ,cr <Plug>VCSReview
nmap <silent> ,cq <Plug>VCSRevert
nmap <silent> ,cN <Plug>VCSSplitAnnotate
nmap <silent> ,cL <Plug>VCSLock
nmap <silent> ,cg <Plug>VCSGotoOriginal
nmap <silent> ,cG <Plug>VCSClearAndGotoOriginal
nmap <silent> ,cd <Plug>VCSDiff
nmap <silent> ,cD <Plug>VCSDelete
map ,t <Plug>TaskList
map <silent> ,mm :ShowMarksPlaceMark
map <silent> ,ma :ShowMarksClearAll
map <silent> ,mh :ShowMarksClearMark
map <silent> ,mo :ShowMarksOn
map <silent> ,mt :ShowMarksToggle
map ,e <Plug>(quickrun)
nmap ,l <Plug>(quicklaunch-list)
nmap ,9 <Plug>(quicklaunch-9)
nmap ,8 <Plug>(quicklaunch-8)
nmap ,7 <Plug>(quicklaunch-7)
nmap ,6 <Plug>(quicklaunch-6)
nmap ,5 <Plug>(quicklaunch-5)
nmap ,4 <Plug>(quicklaunch-4)
nmap ,3 <Plug>(quicklaunch-3)
nmap ,2 <Plug>(quicklaunch-2)
nmap ,1 <Plug>(quicklaunch-1)
nmap ,0 <Plug>(quicklaunch-0)
nnoremap <silent> ,jb :call g:Jsbeautify()
nnoremap ,sm :NamedSessionMenu
nnoremap ,sL :NamedSessionLoadCwd
nnoremap ,sl :NamedSessionLoad
nnoremap ,sN :NamedSessionMakeCwd
nnoremap ,sn :NamedSessionMake
nnoremap ,sE :GlobalSessionEliminateAll
nnoremap ,se :GlobalSessionEliminateCurrent
nnoremap ,ss :GlobalSessionMake
nnoremap ,sS :GlobalSessionMakeLocal
nmap ,caL <Plug>CalendarH
nmap ,cal <Plug>CalendarV
nmap ,a <Plug>ToggleAutoCloseMappings
nmap ,ca <Plug>NERDCommenterAltDelims
vmap ,cA <Plug>NERDCommenterAppend
nmap ,cA <Plug>NERDCommenterAppend
vmap ,c$ <Plug>NERDCommenterToEOL
nmap ,c$ <Plug>NERDCommenterToEOL
vmap ,cu <Plug>NERDCommenterUncomment
nmap ,cu <Plug>NERDCommenterUncomment
vmap ,cn <Plug>NERDCommenterNest
nmap ,cn <Plug>NERDCommenterNest
vmap ,cb <Plug>NERDCommenterAlignBoth
nmap ,cb <Plug>NERDCommenterAlignBoth
vmap ,cl <Plug>NERDCommenterAlignLeft
nmap ,cl <Plug>NERDCommenterAlignLeft
vmap ,cy <Plug>NERDCommenterYank
nmap ,cy <Plug>NERDCommenterYank
vmap ,ci <Plug>NERDCommenterInvert
nmap ,ci <Plug>NERDCommenterInvert
vmap ,cs <Plug>NERDCommenterSexy
nmap ,cs <Plug>NERDCommenterSexy
vmap ,cm <Plug>NERDCommenterMinimal
nmap ,cm <Plug>NERDCommenterMinimal
vmap ,c  <Plug>NERDCommenterToggle
nmap ,c  <Plug>NERDCommenterToggle
vmap ,cc <Plug>NERDCommenterComment
nmap ,cc <Plug>NERDCommenterComment
nmap <silent> ,tl :TaskList
nmap ,fb :tabe:FufBookmark
nmap ,fn :tabe:FufFile
nmap ,fc :FufChangeList
nmap ,fm :FufAddBookmark
nmap ,fa :FufBookmark
nmap ,fd :FufDir
nmap ,ff :FufFile
map <silent> ,z :cclose:let @/=''
map ,/ :SearchList 
vnoremap ,{ "zc{z}
vnoremap ,( "zc(z)
vnoremap ," "zc"z"
vnoremap ,' "zc'z'
map ,. :colorscheme desert:colorscheme ydream
map <silent> ,h :promptrepl
map <silent> ,d :silent !open .
map ,w 
map ,s :w
map ,q :q
map ,tc :tabc
map ,tn :tabe
map ,br :browse edit
map ,rc :tabe ~/.vim/vimrc
xmap S <Plug>VSurround
snoremap U a<BS>U
vmap [% [%m'gv``
snoremap \ a<BS>\
vmap ]% ]%m'gv``
snoremap ^ a<BS>^
snoremap ` a<BS>`
vmap a% [%v]%
nmap cs <Plug>Csurround
nmap ds <Plug>Dsurround
nmap gx <Plug>NetrwBrowseX
xmap gS <Plug>VgSurround
xmap s <Plug>Vsurround
nmap ySS <Plug>YSsurround
nmap ySs <Plug>YSsurround
nmap yss <Plug>Yssurround
nmap yS <Plug>YSurround
nmap ys <Plug>Ysurround
snoremap <Left> bi
snoremap <Right> a
snoremap <BS> a<BS>
vnoremap <S-D-Down> <C-S-End>
nnoremap <S-D-Down> <C-S-End>
vnoremap <S-D-Up> <C-S-Home>
nnoremap <S-D-Up> <C-S-Home>
vnoremap <M-S-Right> <C-S-Right>
nnoremap <M-S-Right> <C-S-Right>
vnoremap <S-D-Right> <S-End>
nnoremap <S-D-Right> <S-End>
vnoremap <M-S-Left> <C-S-Left>
nnoremap <M-S-Left> <C-S-Left>
vnoremap <S-D-Left> <S-Home>
nnoremap <S-D-Left> <S-Home>
nnoremap <silent> <Plug>NetrwBrowseX :call netrw#NetrwBrowseX(expand("<cWORD>"),0)
nnoremap <silent> <Plug>VCSVimDiff :VCSVimDiff
nnoremap <silent> <Plug>VCSUpdate :VCSUpdate
nnoremap <silent> <Plug>VCSUnlock :VCSUnlock
nnoremap <silent> <Plug>VCSStatus :VCSStatus
nnoremap <silent> <Plug>VCSSplitAnnotate :VCSAnnotate!
nnoremap <silent> <Plug>VCSReview :VCSReview
nnoremap <silent> <Plug>VCSRevert :VCSRevert
nnoremap <silent> <Plug>VCSLog :VCSLog
nnoremap <silent> <Plug>VCSLock :VCSLock
nnoremap <silent> <Plug>VCSInfo :VCSInfo
nnoremap <silent> <Plug>VCSClearAndGotoOriginal :VCSGotoOriginal!
nnoremap <silent> <Plug>VCSGotoOriginal :VCSGotoOriginal
nnoremap <silent> <Plug>VCSDiff :VCSDiff
nnoremap <silent> <Plug>VCSDelete :VCSDelete
nnoremap <silent> <Plug>VCSCommit :VCSCommit
nnoremap <silent> <Plug>VCSAnnotate :VCSAnnotate
nnoremap <silent> <Plug>VCSAdd :VCSAdd
vmap <silent> <M-Down> <Plug>upAndDownVisualDown
vmap <silent> <M-Up> <Plug>upAndDownVisualUp
nmap <silent> <M-Down> <Plug>upAndDownDown
nmap <silent> <M-Up> <Plug>upAndDownUp
vnoremap <silent> <Plug>(quickrun) :QuickRun -mode v
nnoremap <silent> <Plug>(quickrun) :QuickRun -mode n
nnoremap <silent> <Plug>(quickrun-op) :set operatorfunc=QuickRung@
nnoremap <silent> <Plug>CalendarH :cal Calendar(1)
nnoremap <silent> <Plug>CalendarV :cal Calendar(0)
nmap <silent> <Plug>NERDCommenterAppend :call NERDComment(0, "append")
nnoremap <silent> <Plug>NERDCommenterToEOL :call NERDComment(0, "toEOL")
vnoremap <silent> <Plug>NERDCommenterUncomment :call NERDComment(1, "uncomment")
nnoremap <silent> <Plug>NERDCommenterUncomment :call NERDComment(0, "uncomment")
vnoremap <silent> <Plug>NERDCommenterNest :call NERDComment(1, "nested")
nnoremap <silent> <Plug>NERDCommenterNest :call NERDComment(0, "nested")
vnoremap <silent> <Plug>NERDCommenterAlignBoth :call NERDComment(1, "alignBoth")
nnoremap <silent> <Plug>NERDCommenterAlignBoth :call NERDComment(0, "alignBoth")
vnoremap <silent> <Plug>NERDCommenterAlignLeft :call NERDComment(1, "alignLeft")
nnoremap <silent> <Plug>NERDCommenterAlignLeft :call NERDComment(0, "alignLeft")
vmap <silent> <Plug>NERDCommenterYank :call NERDComment(1, "yank")
nmap <silent> <Plug>NERDCommenterYank :call NERDComment(0, "yank")
vnoremap <silent> <Plug>NERDCommenterInvert :call NERDComment(1, "invert")
nnoremap <silent> <Plug>NERDCommenterInvert :call NERDComment(0, "invert")
vnoremap <silent> <Plug>NERDCommenterSexy :call NERDComment(1, "sexy")
nnoremap <silent> <Plug>NERDCommenterSexy :call NERDComment(0, "sexy")
vnoremap <silent> <Plug>NERDCommenterMinimal :call NERDComment(1, "minimal")
nnoremap <silent> <Plug>NERDCommenterMinimal :call NERDComment(0, "minimal")
vnoremap <silent> <Plug>NERDCommenterToggle :call NERDComment(1, "toggle")
nnoremap <silent> <Plug>NERDCommenterToggle :call NERDComment(0, "toggle")
vnoremap <silent> <Plug>NERDCommenterComment :call NERDComment(1, "norm")
nnoremap <silent> <Plug>NERDCommenterComment :call NERDComment(0, "norm")
map <D-]> 
map <D-a> 
map <D-g> 
map <D-i> 	
map <D-o> 
map <D-r> 
map <D-w> 
map <D-d> 
map <D-u> 
map <D-b> 
map <D-f> 
map <D-e> 3
map <D-y> 3
map <D-k> 5k
map <D-j> 5j
map <D-H> gT
map <D-L> gt
nmap <silent> <F3> :call MRUToggle()
nmap <silent> <F2> :NERDTreeToggle
map <silent> <F7> :call QuickfixToggle()
map <silent> <F6> :call ScrollBarToggle()
map <silent> <F5> :call RelativeNumberToggle()
vmap <silent> <F4> :call QuickSearchList(1)
nmap <silent> <F4> :call QuickSearchList(0)
vmap <S-Tab> <gv
nmap <S-Tab> v<
xmap <BS> "-d
vmap <D-x> "*d
vmap <D-c> "*y
vmap <D-v> "-d"*P
nmap <D-v> "*P
imap S <Plug>ISurround
imap s <Plug>Isurround
inoremap <expr> 	 pumvisible() ? "\" : "\	" 
inoremap <expr>  pumvisible() ? "\" : (StructStart() ? "\\kA\" : "\")
imap  <Plug>Isurround
inoremap <silent>   =AutoSpace()
let &cpo=s:cpo_save
unlet s:cpo_save
set autochdir
set autoindent
set autoread
set background=dark
set backspace=indent,eol,start
set browsedir=buffer
set completefunc=neocomplcache#manual_complete
set completeopt=preview,menuone
set confirm
set fileencodings=utf-8,ucs-bom,gb18030,gb2312,cp936,big5,euc-jp
set fillchars=vert:\ ,stl:\ ,stlnc:\ 
set guifont=Consolas:h12
set guioptions=egmrLt
set guitablabel=%M%t
set helplang=cn
set history=500
set hlsearch
set ignorecase
set incsearch
set indentkeys=o,O,*<Return>,<>>,{,},!^F
set keymodel=startsel,stopsel
set langmenu=none
set linespace=2
set mouse=a
set printexpr=system('open\ -a\ Preview\ '.v:fname_in)\ +\ v:shell_error
set ruler
set scrolloff=2
set selectmode=mouse,key
set sessionoptions=blank,curdir,folds,help,options,tabpages,winsize
set shiftwidth=4
set shortmess=atI
set smartcase
set smartindent
set tabstop=4
set termencoding=utf-8
set transparency=5
set updatetime=100
set visualbell
set whichwrap=b,s,h,l,<,>,[,]
set wildmenu
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/Sites/project/ama2010/css
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +0 ~/Sites/project/ama2010/css/default.css
silent! argdel *
edit ~/Sites/project/ama2010/css/default.css
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
setlocal keymap=
setlocal noarabic
setlocal autoindent
setlocal balloonexpr=
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=s1:/*,mb:*,ex:*/
setlocal commentstring=/*%s*/
setlocal complete=.,w,b,u,t,i
setlocal concealcursor=
setlocal conceallevel=0
setlocal completefunc=neocomplcache#manual_complete
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
set cursorline
setlocal cursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal noexpandtab
if &filetype != 'css'
setlocal filetype=css
endif
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldmarker={{{,}}}
setlocal foldmethod=manual
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=croql
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=2
setlocal imsearch=2
setlocal include=^\\s*@import\\s\\+\\%(url(\\)\\=
setlocal includeexpr=
setlocal indentexpr=GetCSSIndent()
setlocal indentkeys=0{,0},!^F,o,O
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255
setlocal keywordprg=
setlocal nolinebreak
setlocal nolisp
setlocal nolist
setlocal nomacmeta
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=octal,hex
set number
setlocal number
setlocal numberwidth=4
setlocal omnifunc=csscomplete#CompleteCSS
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=4
setlocal noshortname
setlocal nosmartindent
setlocal softtabstop=0
setlocal nospell
setlocal spellcapcheck=
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=
setlocal suffixesadd=
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != 'css3'
setlocal syntax=css3
endif
setlocal tabstop=4
setlocal tags=
setlocal textwidth=0
setlocal thesaurus=
setlocal noundofile
setlocal nowinfixheight
setlocal nowinfixwidth
set nowrap
setlocal nowrap
setlocal wrapmargin=0
silent! normal! zE
let s:l = 83 - ((36 * winheight(0) + 23) / 47)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
83
normal! 0
lcd ~/Sites/project/ama2010/css
tabnext 1
if exists('s:wipebuf')
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=atI
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
